{"version":3,"sources":["store.js"],"names":["_vue","_interopRequireDefault","require","_vuex","_firebaseConfig","Vue","use","Vuex","Store","state","users","mutations","setUsers","addUser","user","push","removeUser","userId","filter","id","fetchUsers","commit","get","snapshot","docs","map","doc","_objectSpread","data","add","docRef","getters"],"mappings":"2FAAA,IAAAA,KAAAC,uBAAAC,QAAA,QACAC,MAAAF,uBAAAC,QAAA,SACAE,gBAAAF,QAAA,uzBAEAG,KAAAA,QAAIC,IAAIC,MAAAA,sBAEO,IAAIA,MAAAA,QAAKC,MAAM,CAN9BC,MAAA,CAQQC,MAAO,IAEXC,UAAW,CARfC,SAQe,SARfH,EAAAC,GAUYD,EAAMC,MAAQA,GAElBG,QAJO,SAICJ,EAAOK,GACXL,EAAMC,MAAMK,KAAKD,IAErBE,WAPO,SAOIP,EAAOQ,GACdR,EAAMC,MAAQD,EAAMC,MAAMQ,OAAO,SAAAJ,GAAI,OAAIA,EAAKK,KAAOF,MAdjEZ,QAAAA,CAkBce,WAlBdf,SAAAA,GAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAkB2BgB,EAlB3BhB,EAkB2BgB,OAlB3BhB,EAAAA,KAAAA,EAAAA,mBAAAA,MAEmBE,gBAAAA,GAAKC,WAAM,SAAAc,OAF9BjB,KAAAA,EAEekB,EAFflB,EAAAA,KAGWK,EAAAa,EAAAC,KAAAC,IAAA,SAAAC,GAAA,OAAAC,cAAA,CAAAR,GAAAO,EAAAP,IAAAO,EAAAE,UACIP,EAAA,WAAAX,GAJfL,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,WAMeQ,QANfR,SAAAA,EAMeS,GANfT,IAAAA,EAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAMegB,EANfhB,EAMegB,OANfhB,EAAAA,KAAAA,EAAAA,mBAAAA,MAOiBI,gBAAAA,GAAAA,WAAc,SAAAoB,IAAAf,IAP/BT,KAAAA,EAMeyB,EANfzB,EAAAA,KAQkBK,EAAN,UAAAiB,cAAA,CAAAR,GAAAW,EAAAX,IAAAL,IARZT,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,WAMeW,WANfX,SAAAA,EAUuBS,GAVvBT,IAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAMegB,EANfhB,EAMegB,OANfhB,EAAAA,KAAAA,EAAAA,mBAAAA,MAWwBU,gBAAAA,GAAAA,WAAZ,SAAAW,IAAAT,GAAYF,UAXxBV,KAAAA,EAMegB,EAAA,aAAAJ,GANfZ,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,YAciD0B,QAAA,CAArCrB,MAAA,SAAAD,GAAA,OAAAA,EAAAC","file":"store.min.js","sourcesContent":["import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport { db } from './firebaseConfig';\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n    state: {\r\n        users: []\r\n    },\r\n    mutations: {\r\n        setUsers(state, users) {\r\n            state.users = users;\r\n        },\r\n        addUser(state, user) {\r\n            state.users.push(user);\r\n        },\r\n        removeUser(state, userId) {\r\n            state.users = state.users.filter(user => user.id !== userId);\r\n        }\r\n    },\r\n    actions: {\r\n        async fetchUsers({ commit }) {\r\n            const snapshot = await db.collection('users').get();\r\n            const users = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n            commit('setUsers', users);\r\n        },\r\n        async addUser({ commit }, user) {\r\n            const docRef = await db.collection('users').add(user);\r\n            commit('addUser', { id: docRef.id, ...user });\r\n        },\r\n        async removeUser({ commit }, userId) {\r\n            await db.collection('users').doc(userId).delete();\r\n            commit('removeUser', userId);\r\n        }\r\n    },\r\n    getters: {\r\n        users: state => state.users\r\n    }\r\n});\r\n"]}